kind: MLApp
metadata:
  name: tensorflow
spec:
  package_manager: "conda"
  default_mount_path: "/notebooks"
  packages:
    - names:
      {{- if eq .python_version.value "3" }}
      - python=3.6
      {{- end }}
      {{- if eq .python_version.value "2" }}
      - python=2.7
      {{- end }}
      {{- if .jupyter.value }}
      - jupyter
      {{- end }}
      {{- if .jupyter_contrib_nbextensions.value }}
      - conda-forge::jupyter_contrib_nbextensions
      - conda-forge::jupyter_nbextensions_configurator
      {{- end }}
      - pip
      {{- range $i, $value := .packages }}
      - "{{ $value }}"
      {{- end }}
      manager: "conda"
  tasks:
  - name: standalone
    resources:
    - name: worker
      replicas: 1
      restartPolicy: Never
      maxRestartCount: 0
      {{- if eq .python_version.value "3" }}
      images:
        gpu: "kuberlab/mlbase:gpu-36-base-libs"
        cpu: "kuberlab/mlbase:cpu-36-base-libs"
      {{- end }}
      {{- if eq .python_version.value "2" }}
      images:
        gpu: "kuberlab/mlbase:gpu-27-base-libs"
        cpu: "kuberlab/mlbase:cpu-27-base-libs"
      {{- end }}
      command: python hello-tensorflow.py
      workdir: "$SRC_DIR"
      env:
      - name: CONDA_ENV
        value: /notebooks/lib
      resources:
        accelerators:
          gpu: 0
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          cpu: 1000m
          memory: 8Gi
      default_volume_mapping: true
  uix:
  {{- if .jupyter.value }}
  - name: jupyter
    displayName: Jupyter
    {{- if eq .python_version.value "3" }}
    images:
      gpu: "kuberlab/mlbase:gpu-36-base-libs"
      cpu: "kuberlab/mlbase:cpu-36-base-libs"
    {{- end }}
    {{- if eq .python_version.value "2" }}
    images:
      gpu: "kuberlab/mlbase:gpu-27-base-libs"
      cpu: "kuberlab/mlbase:cpu-27-base-libs"
    {{- end }}
    env:
    - name: CONDA_ENV
      value: /notebooks/lib
    resources:
      requests:
        cpu: 100m
        memory: 64Mi
      limits:
        cpu: 1000m
        memory: 4Gi
    ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: http
    default_volume_mapping: true
  {{- end }}
  volumes:
  - isLibDir: false
    name: training
    clusterStorage: {{ .storage.value }}
  - gitRepo:
      repository: {{ gitRepo .src.value }}
    isLibDir: false
    name: src
    subPath: {{ gitSubPath .src.value }}
  - isLibDir: true
    name: lib
    clusterStorage: {{ .storage.value }}
    {{- if .global_env.value }}
    subPath: "/{{ .env.value }}"
    {{- else }}
    subPath: "{{ .env.value }}"
    {{- end }}
  - isLibDir: false
    name: data
    {{- if .dataset.value }}
    datasetFS:
      workspace: {{ .dataset.workspace }}
      dataset: {{ .dataset.value }}
      version: {{ .dataset.version }}
    {{- else }}
    clusterStorage: {{ .storage.value }}
    {{- end }}
  - isLibDir: false
    mountPath: /notebooks
    name: code
    subPath: code
    clusterStorage: {{ .storage.value }}
